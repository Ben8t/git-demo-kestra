id: train_model
namespace: kestra.weather.prod.ml

tasks:

  - id: workding_dir
    type: io.kestra.plugin.core.flow.WorkingDirectory
    tasks:
      - id: download_data
        type: io.kestra.plugin.gcp.cli.GCloudCLI
        serviceAccount: "{{ secret('GCP_SA') }}"
        commands:
          - gcloud storage cp 'gs://weather-kestra/data/**/*.csv' .

      - id: query
        type: io.kestra.plugin.jdbc.duckdb.Query
        sql: |
          WITH clean AS (
            SELECT 
                numer_sta AS station_id,
                strptime(CAST(date AS VARCHAR),'%Y%m%d%H%M%S') AS date_timestamp,
                CASE
                    WHEN t = 'mq' THEN NULL
                    ELSE CAST(t AS NUMERIC)
                END AS temperature
            FROM read_csv_auto("{{workingDir}}/*.csv")
            )

            SELECT
                station_id,
                date_timestamp,
                DATEPART('MONTH', date_timestamp) AS month_,
                DATEPART('DAY', date_timestamp) AS day_,
                DATEPART('HOUR', date_timestamp) AS hour_,
                temperature,
                LAG(temperature, 1) OVER(PARTITION BY station_id ORDER BY date_timestamp) AS temp_1,
                LAG(temperature, 2) OVER(PARTITION BY station_id ORDER BY date_timestamp) AS temp_2,
                LAG(temperature, 3) OVER(PARTITION BY station_id ORDER BY date_timestamp) AS temp_3,
                LAG(temperature, 4) OVER(PARTITION BY station_id ORDER BY date_timestamp) AS temp_4,
                LAG(temperature, 5) OVER(PARTITION BY station_id ORDER BY date_timestamp) AS temp_5
            FROM clean
            ;
        store: true

      - id: csv_writer
        type: io.kestra.plugin.serdes.csv.IonToCsv
        from: "{{ outputs.query.uri }}"

  - id: train
    type: io.kestra.plugin.scripts.python.Commands
    namespaceFiles:
      enabled: true
    inputFiles:
      training_data.csv: "{{ outputs.csv_writer.uri }}"
    outputFiles:
      - model.pkl
    beforeCommands:
      - pip install pandas scikit-learn
    commands:
      - python script/train.py